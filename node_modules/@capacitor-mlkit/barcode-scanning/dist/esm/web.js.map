{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"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","sourcesContent":["import { CapacitorException, ExceptionCode, WebPlugin } from '@capacitor/core';\n\nimport type { DetectedBarcode } from './barcode-detector';\nimport { BarcodeValueType, LensFacing } from './definitions';\nimport type {\n  BarcodeFormat,\n  BarcodesScannedEvent,\n  BarcodeScannerPlugin,\n  GetMaxZoomRatioResult,\n  GetMinZoomRatioResult,\n  GetZoomRatioResult,\n  IsGoogleBarcodeScannerModuleAvailableResult,\n  IsSupportedResult,\n  PermissionStatus,\n  ReadBarcodesFromImageOptions,\n  ReadBarcodesFromImageResult,\n  ScanResult,\n  SetZoomRatioOptions,\n  StartScanOptions,\n  IsTorchEnabledResult,\n  IsTorchAvailableResult,\n} from './definitions';\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/consistent-type-imports\n  const BarcodeDetector: typeof import('./barcode-detector').BarcodeDetector;\n}\n\nexport class BarcodeScannerWeb\n  extends WebPlugin\n  implements BarcodeScannerPlugin\n{\n  private readonly _isSupported = 'BarcodeDetector' in window;\n  private readonly errorVideoElementMissing = 'videoElement must be provided.';\n  private readonly eventBarcodesScanned = 'barcodesScanned';\n\n  private intervalId: number | undefined;\n  private stream: MediaStream | undefined;\n  private videoElement: HTMLVideoElement | undefined;\n\n  async startScan(options?: StartScanOptions): Promise<void> {\n    if (!this._isSupported) {\n      throw this.createUnavailableException();\n    }\n    if (!options?.videoElement) {\n      throw new Error(this.errorVideoElementMissing);\n    }\n    this.videoElement = options.videoElement;\n    this.stream = await navigator.mediaDevices.getUserMedia({\n      video: {\n        facingMode: {\n          ideal:\n            options?.lensFacing === LensFacing.Front ? 'user' : 'environment',\n        },\n      },\n      audio: false,\n    });\n    options.videoElement.srcObject = this.stream;\n    await options.videoElement.play();\n    const barcodeDetector = new BarcodeDetector();\n    this.intervalId = window.setInterval(async () => {\n      if (!options.videoElement) {\n        return;\n      }\n      const barcodes = await barcodeDetector.detect(options.videoElement);\n      if (barcodes.length === 0) {\n        return;\n      } else {\n        this.handleScannedBarcodes(barcodes);\n      }\n    }, 500);\n  }\n\n  async stopScan(): Promise<void> {\n    if (!this._isSupported) {\n      throw this.createUnavailableException();\n    }\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n      this.intervalId = undefined;\n    }\n    if (this.stream) {\n      this.stream.getTracks().forEach(track => track.stop());\n      this.stream = undefined;\n    }\n    if (this.videoElement) {\n      this.videoElement.srcObject = null;\n      this.videoElement = undefined;\n    }\n  }\n\n  async readBarcodesFromImage(\n    _options: ReadBarcodesFromImageOptions,\n  ): Promise<ReadBarcodesFromImageResult> {\n    throw this.createUnavailableException();\n  }\n\n  async scan(): Promise<ScanResult> {\n    throw this.createUnavailableException();\n  }\n\n  async isSupported(): Promise<IsSupportedResult> {\n    return { supported: this._isSupported };\n  }\n\n  async enableTorch(): Promise<void> {\n    throw this.createUnavailableException();\n  }\n\n  async disableTorch(): Promise<void> {\n    throw this.createUnavailableException();\n  }\n\n  async toggleTorch(): Promise<void> {\n    throw this.createUnavailableException();\n  }\n\n  async isTorchEnabled(): Promise<IsTorchEnabledResult> {\n    throw this.createUnavailableException;\n  }\n\n  async isTorchAvailable(): Promise<IsTorchAvailableResult> {\n    throw this.createUnavailableException();\n  }\n\n  async setZoomRatio(_options: SetZoomRatioOptions): Promise<void> {\n    throw this.createUnavailableException();\n  }\n\n  async getZoomRatio(): Promise<GetZoomRatioResult> {\n    throw this.createUnavailableException();\n  }\n\n  async getMinZoomRatio(): Promise<GetMinZoomRatioResult> {\n    throw this.createUnavailableException();\n  }\n\n  async getMaxZoomRatio(): Promise<GetMaxZoomRatioResult> {\n    throw this.createUnavailableException();\n  }\n\n  async openSettings(): Promise<void> {\n    throw this.createUnavailableException();\n  }\n\n  async isGoogleBarcodeScannerModuleAvailable(): Promise<IsGoogleBarcodeScannerModuleAvailableResult> {\n    throw this.createUnavailableException();\n  }\n\n  async installGoogleBarcodeScannerModule(): Promise<void> {\n    throw this.createUnavailableException();\n  }\n\n  async checkPermissions(): Promise<PermissionStatus> {\n    try {\n      const result = await navigator.permissions.query({\n        name: 'camera' as any,\n      });\n      return {\n        camera: result.state,\n      };\n    } catch (error) {\n      return {\n        camera: 'prompt',\n      };\n    }\n  }\n\n  async requestPermissions(): Promise<PermissionStatus> {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      stream.getTracks().forEach(track => track.stop());\n      return {\n        camera: 'granted',\n      };\n    } catch (error) {\n      return {\n        camera: 'denied',\n      };\n    }\n  }\n\n  private createUnavailableException(): CapacitorException {\n    return new CapacitorException(\n      'This plugin method is not available on this platform.',\n      ExceptionCode.Unavailable,\n    );\n  }\n\n  private handleScannedBarcodes(barcodes: DetectedBarcode[]): void {\n    const result: BarcodesScannedEvent = {\n      barcodes: barcodes.map(barcode => ({\n        cornerPoints: [\n          [barcode.cornerPoints[0].x, barcode.cornerPoints[0].y],\n          [barcode.cornerPoints[1].x, barcode.cornerPoints[1].y],\n          [barcode.cornerPoints[2].x, barcode.cornerPoints[2].y],\n          [barcode.cornerPoints[3].x, barcode.cornerPoints[3].y],\n        ],\n        displayValue: barcode.rawValue,\n        rawValue: barcode.rawValue,\n        format: barcode.format.toUpperCase() as BarcodeFormat,\n        valueType: BarcodeValueType.Unknown,\n      })),\n    };\n    this.notifyListeners(this.eventBarcodesScanned, result);\n  }\n}\n"]}